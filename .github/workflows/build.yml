name: Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]


env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  # MARK: Version
  version:
    name: Generate version and tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    outputs:
      FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
      MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      Major: ${{ steps.gitversion.outputs.Major }}
      Minor: ${{ steps.gitversion.outputs.Minor }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.0.0
      - name: Set output variables
        run: |
          echo "::notice::FullSemVer ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "::notice::MajorMinorPatch ${{ steps.gitversion.outputs.MajorMinorPatch }}"
          echo "::notice::Major ${{ steps.gitversion.outputs.Major }}"
          echo "::notice::Minor ${{ steps.gitversion.outputs.Minor }}"
      - name: Bump version and push tag # https://github.com/marketplace/actions/github-tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        if: github.ref == 'refs/heads/master'
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.gitversion.outputs.FullSemVer }}
          tag_prefix: v
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master'
        continue-on-error: true
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          allowUpdates: true
          discussionCategory: Releases


  # MARK: Sonar Cloud
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Run Hadolint # Can ignore inline by adding comment: # hadolint ignore=DL3001,SC1081
        uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true
        with:
          dockerfile: Dockerfile
          output-file: hadolint.json
          format: json
      - name: Upload Hadolint artifact
        uses: actions/upload-artifact@v4
        with:
          name: hadolint
          path: hadolint.json
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectVersion=${{ needs.version.outputs.FullSemVer }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # MARK: Docker Build and Push
  build-and-push:
    name: Build and push
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push # https://github.com/marketplace/actions/build-and-push-docker-images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.version.outputs.Major }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.version.outputs.FullSemVer }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.version.outputs.Major }}.${{ needs.version.outputs.Minor }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

